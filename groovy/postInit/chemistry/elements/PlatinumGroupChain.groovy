import static globals.Globals.*

BR = recipemap('batch_reactor')
CSTR = recipemap('continuous_stirred_tank_reactor')
DISTILLERY = recipemap('distillery')
DISTILLATION_TOWER = recipemap('distillation_tower')
ROASTER = recipemap('roaster')
MACERATOR = recipemap('macerator')
SIFTER = recipemap('sifter')
CRYSTALLIZER = recipemap('crystallizer')
FLOTATION = recipemap('froth_flotation')
MIXER = recipemap('mixer')
CLARIFIER = recipemap('clarifier')
GRAVITY_SEPARATOR = recipemap('gravity_separator')
EBF = recipemap('electric_blast_furnace')
ELECTROMAGNETIC_SEPARATOR = recipemap('electromagnetic_separator')
BATCH_REACTOR = recipemap('batch_reactor')
AUTOCLAVE = recipemap('autoclave')
ELECTROLYTIC_CELL = recipemap('electrolytic_cell')
SIFTER = recipemap('sifter')

// Platinum Dust * 1
mods.gregtech.centrifuge.removeByInput(30, [metaitem('dustAlluvialPlatinum')], null)

//LOW YIELD CHAIN FROM SECONDARY ORES
MACERATOR.recipeBuilder()
    .inputs(item('susy:resource_block', 10))
    .outputs(metaitem('dustAlluvialPlatinum') * 9)
    .duration(160)
    .EUt(30)
    .buildAndRegister()

SIFTER.recipeBuilder()
    .inputs(ore('dustAlluvialPlatinum'))
    .outputs(metaitem('nuggetFerroplatinum') * 4)
    .outputs(metaitem('dustNetherQuartz') * 3)
    .duration(160)
    .EUt(30)
    .buildAndRegister()

BR.recipeBuilder()
    .inputs(ore('dustFerroplatinum') * 4)
    .fluidInputs(fluid('aqua_regia') * 8000)
    .fluidInputs(fluid('hydrogen_chloride') * 8000)
    .fluidOutputs(fluid('hexachloroplatinic_acid_solution') * 8000)
    .fluidOutputs(fluid('hydrogen') * 2000)
    .fluidOutputs(fluid('nitric_oxide') * 4000)
    .duration(240)
    .EUt(Globals.voltAmps[2])
    .buildAndRegister()

BR.recipeBuilder()
    .inputs(ore('dustZinc'))
    .fluidInputs(fluid('hexachloroplatinic_acid_solution') * 8000)
    .fluidOutputs(fluid('cemented_hexachloroplatinic_acid_solution') * 8000)
    .duration(240)
    .EUt(Globals.voltAmps[2])
    .buildAndRegister()

CRYSTALLIZER.recipeBuilder()
    .circuitMeta(1)
    .fluidInputs(fluid('cemented_hexachloroplatinic_acid_solution') * 8000)
    .fluidInputs(fluid('ammonium_chloride_solution') * 8000)
    .chancedOutput(metaitem('dustAmmoniumHexachloroplatinate') * 51, 7500, 0)
    .fluidOutputs(fluid('platinum_mother_liquor') * 8000)
    .fluidOutputs(fluid('platinum_mother_liquor') * 8000) //temp, waiting on susycore #110
    .duration(240)
    .EUt(Globals.voltAmps[2])
    .buildAndRegister()

DISTILLATION_TOWER.recipeBuilder()
    .fluidInputs(fluid('platinum_mother_liquor') * 8000)
    .outputs(metaitem('dustZincChloride') * 3)
    .fluidOutputs(fluid('ammonium_chloride_solution') * 1000)
    .fluidOutputs(fluid('water') * 7000)
    .fluidOutputs(fluid('hydrogen_chloride') * 6000)
    .duration(240)
    .EUt(Globals.voltAmps[2])
    .buildAndRegister()

ROASTER.recipeBuilder()
    .inputs(ore('dustAmmoniumHexachloroplatinate') * 17)
    .fluidInputs(fluid('hydrogen') * 4000)
    .outputs(metaitem('sponge.platinum'))
    .fluidOutputs(fluid('ammonia') * 2000)
    .fluidOutputs(fluid('hydrogen_chloride') * 6000)
    .duration(240)
    .EUt(Globals.voltAmps[2])
    .buildAndRegister()

MACERATOR.recipeBuilder()
    .inputs(metaitem('sponge.platinum'))
    .outputs(metaitem('dustPlatinum'))
    .duration(240)
    .EUt(Globals.voltAmps[2])
    .buildAndRegister()

BR.recipeBuilder()
    .notConsumable(ore('springCupronickel'))
    .fluidInputs(fluid('platinum_mother_liquor') * 8000)
    .fluidOutputs(fluid('divalent_palladium_solution') * 8000)
    .fluidOutputs(fluid('chlorine') * 250)
    .duration(120)
    .EUt(Globals.voltAmps[2])
    .buildAndRegister()

CRYSTALLIZER.recipeBuilder()
    .fluidInputs(fluid('ammonia_solution') * 2000)
    .fluidInputs(fluid('hydrogen_chloride') * 2000)
    .fluidInputs(fluid('divalent_palladium_solution') * 8000)
    .chancedOutput(metaitem('dustDiamminedichloropalladium') * 11, 1250, 0)
    .fluidOutputs(fluid('palladium_mother_liquor') * 12000)
    .duration(120)
    .EUt(Globals.voltAmps[2])
    .buildAndRegister()

ROASTER.recipeBuilder()
    .inputs(ore('dustDiamminedichloropalladium') * 11)
    .fluidInputs(fluid('hydrogen') * 4000)
    .outputs(metaitem('dustPalladium'))
    .fluidOutputs(fluid('ammonia') * 2000)
    .fluidOutputs(fluid('hydrogen_chloride') * 2000)
    .duration(240)
    .EUt(Globals.voltAmps[2])
    .buildAndRegister()

DISTILLATION_TOWER.recipeBuilder()
    .fluidInputs(fluid('palladium_mother_liquor') * 12000)
    .outputs(metaitem('dustZincChloride') * 3)
    .fluidOutputs(fluid('ammonium_chloride_solution') * 1000)
    .fluidOutputs(fluid('water') * 11000)
    .fluidOutputs(fluid('ammonia') * 2000)
    .fluidOutputs(fluid('hydrogen_chloride') * 8000)
    .duration(240)
    .EUt(Globals.voltAmps[2])
    .buildAndRegister()

//MODERN SEPARATION PROCESSES

GRAVITY_SEPARATOR.recipeBuilder() // Sifted Tantalite
    .inputs(ore('dustPentlandite'))
    .outputs(metaitem('dustSiftedPentlandite'))
    .chancedOutput(metaitem('dustUltramaficTailings'), 2500, 0)
    .EUt(Globals.voltAmps[1])
    .duration(40)
    .buildAndRegister()

MIXER.recipeBuilder()
    .inputs(ore('dustSiftedPentlandite') * 8)
    .fluidInputs(fluid('distilled_water') * 2000)
    .fluidOutputs(fluid('impure_pentlandite_slurry') * 2000)
    .EUt(Globals.voltAmps[3])
    .duration(80)
    .buildAndRegister()

FLOTATION.recipeBuilder()
    .fluidInputs(fluid('impure_pentlandite_slurry') * 2000)
    .notConsumable(metaitem('dustAluminiumNitride'))
    .notConsumable(metaitem('dustPotassiumOctylHydroxamate'))
    .notConsumable(fluid('tnt_solution') * 100)
    .fluidOutputs(fluid('pentlandite_slurry') * 1000)
    .fluidOutputs(fluid('ultramafic_tailing_slurry') * 1000)
    .EUt(Globals.voltAmps[3])
    .duration(80)
    .buildAndRegister()

CLARIFIER.recipeBuilder()
    .fluidInputs(fluid('pentlandite_slurry') * 1000)
    .outputs(metaitem('dustFlotatedPentlandite') * 16)
    .fluidOutputs(fluid('wastewater') * 1000)
    .duration(20)
    .EUt(Globals.voltAmps[1])
    .buildAndRegister()

//The pelletized material is smelted in a shaft furnace to form a 
//copper â€“ nickel matte. Oxygen is then blown into the converter
//to oxidize the iron sulfide selectively to iron oxide, 
//which forms a slag.
EBF.recipeBuilder()
    .inputs(ore('dustFlotatedPentlandite') * 8)
    .outputs(metaitem('dustGreenMatte') * 8)
    .duration(20)
    .blastFurnaceTemp(2700)
    .EUt(Globals.voltAmps[2])
    .buildAndRegister()

ROASTER.recipeBuilder()
     .inputs(ore('dustGreenMatte') * 8)
     .fluidInputs(fluid('oxygen') * 4000)
     .outputs(metaitem('ingotWhiteMatte') * 8)
     .outputs(metaitem('dustIronIiiOxide') * 2)
     .fluidOutputs(fluid('sulfur_dioxide') * 2000)
     .duration(200)
     .EUt(Globals.voltAmps[2])
     .buildAndRegister()

//method described in https://patentimages.storage.googleapis.com/2b/70/5a/cbb5549831857c/US4571262.pdf

//atmospheric leach
BATCH_REACTOR.recipeBuilder()
    .inputs(ore('dustWhiteMatte') )
    .fluidInputs(fluid('air') * 9750)
    .fluidInputs(fluid('acidic_nickel_copper_sulfate_solution') )
    .fluidOutputs(fluid('oxidized_pgm_leach') )
    .duration(200)
    .EUt(Globals.voltAmps[2])
    .buildAndRegister()

SIFTER.recipeBuilder()
    .fluidInputs(fluid('oxidized_pgm_leach') )
    .notConsumable(metaitem('item_filter'))
    .fluidOutputs(fluid('impure_nickel_sulfate') )
    .outputs(metaitem('dustCopperRichPgmSolids') )
    .duration(200)
    .EUt(Globals.voltAmps[2])
    .buildAndRegister()

//pressure leach
AUTOCLAVE.recipeBuilder()
    .fluidInputs(fluid('sulfuric_acid') )
    .fluidInputs(fluid('acidic_nickel_copper_sulfate_solution') )
    .inputs(ore('dustCopperRichPgmSolids') )
    .fluidOutputs(fluid('pgm_copper_leach_slurry') )
    .duration(200)
    .EUt(Globals.voltAmps[2])
    .buildAndRegister()

SIFTER.recipeBuilder()
    .fluidInputs(fluid('pgm_copper_leach_slurry') )
    .notConsumable(metaitem('item_filter'))
    .fluidOutputs(fluid('pgm_free_copper_leach') )
    .outputs(metaitem('dustPgmConcentrate') )
    .duration(200)
    .EUt(Globals.voltAmps[2])
    .buildAndRegister()

//selenium extraction
CSTR.recipeBuilder()
    .fluidInputs(fluid('pgm_free_copper_leach') )
    .fluidInputs(fluid('sulfur_dioxide') )
    .fluidOutputs(fluid('sulfidic_copper_leach') )
    .duration(50)
    .EUt(Globals.voltAmps[2])
    .buildAndRegister()

SIFTER.recipeBuilder()
    .fluidInputs(fluid('sulfidic_copper_leach') )
    .notConsumable(metaitem('item_filter'))
    .fluidOutputs(fluid('selenium_free_copper_leach') )
    .outputs(metaitem('dustCopperSelenidePrecipitate') )
    .duration(200)
    .EUt(Globals.voltAmps[2])
    .buildAndRegister()

ROASTER.recipeBuilder()
    .inputs(ore('dustCopperSelenidePrecipitate') )
    .fluidInputs(fluid('air') )
    .outputs(metaitem('dustSeleniumDioxide') )
    .outputs(metaitem('dustSeleniumFreeCalcine') )
    .duration(200)
    .EUt(Globals.voltAmps[2])
    .buildAndRegister()

//copper electrowinning
ELECTROLYTIC_CELL.recipeBuilder()
    .fluidInputs(fluid('selenium_free_copper_leach') )
    .inputs(ore('plateCopper') )
    .notConsumable(metaitem('plateStainlessSteel') )
    .fluidInputs(fluid('sulfuric_acid') )
    .fluidOutputs(fluid('acidic_nickel_copper_sulfate_solution') )
    .duration(200)
    .EUt(Globals.voltAmps[2])
    .buildAndRegister()    


//method described in original paper (renner 2001)

// ELECTROMAGNETIC_SEPARATOR.recipeBuilder()
//     .inputs(ore('dustWhiteMatte'))
//     .outputs(metaitem('pgm_RichMatte'))
//     .outputs(metaitem('pgm_FreeMatte'))
//     .duration(20)
//     .EUt(Globals.voltAmps[2])
//     .buildAndRegister()

// AUTOCLAVE.recipeBuilder()
//     .inputs(ore('pgm_RichMatte'))
//     .fluidInputs(fluid('oxygen') )
//     .fluidInputs(fluid('sulfuric_acid') )
//     .outputs(fluid('dustPgm_concentrate') )
//     .fluidOutputs(fluid(''))
//     .duration(200)
//     .EUt(Globals.voltAmps[2])



